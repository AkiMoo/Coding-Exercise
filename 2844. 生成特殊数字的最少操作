class Solution {
public:
    int minimumOperations(string &num) {
        int n = num.length();
        reverse(num.begin(),num.end());
        stack<char> s1,s2;
        int mark1 = 1000,mark2=1000;
        for(int i = 0;i<n;i++){
            if(s.empty()){
                if(num[i]=='0'){
                    s1.push(num[i]);
                }
                if(num[i]=='5'){
                    s2.push(num[i]);
                }
            }
            else if(s2.top()=='5'){
                if(num[i]=='2'||num[i]=='7'){
                    s.push(num[i]);
                    mark2 = i;
                    break;
                }
            }
            else if(s1.top()=='0'){
                if(num[i]=='5'||num[i]=='0'){
                    s.push(num[i]);
                    mark1 = i;
                    break;
                }
            }
        }
        if(s1.size()>1&&s2.size()>1){
            return min(mark1,mark2) - 1;
        }
        else if(s1.size()>1){
            return mark1 - 1;
        }
        else if(s2.size()>1){
            return mark2 - 1;
        }
        else if(s1.size()=1){
            return n-1;
        }
        else{
            return n;
        }
    }
};
